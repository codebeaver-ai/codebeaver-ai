main_service: node
services:
  node:
    image: node:22.13.1-slim
test_commands:
  - 'npx vitest run --coverage.include="**/*.{js,jsx,ts,tsx}" --coverage.all=true --reporter=json --outputFile=vitest-results.json'
  - 'if [ -f "coverage/coverage-final.json" ]; then mv coverage/coverage-final.json coverage.json; else echo "Warn: coverage/coverage-final.json not found"; exit 1; fi'
single_file_test_commands:
  - "npx vitest run --coverage $TEST_FILE --reporter=json --outputFile=vitest-results.json"
  - 'if [ -f "coverage/coverage-final.json" ]; then mv coverage/coverage-final.json coverage.json; else echo "Warn: coverage/coverage-final.json not found"; exit 1; fi'
setup_commands:
  - npm install --legacy-peer-deps
  - npm install -D typescript
  - npm install -D @types/node
  - npm install -D vitest@latest
  - npm install -D @vitest/coverage-v8@latest
  - npm install -D @babel/core
  - npm install -D @babel/preset-typescript
  - npm install -D @babel/preset-react
  - npm install -D @babel/preset-env
  - npm install -D @testing-library/react
  - npm install -D @testing-library/jest-dom
  - npm install -D @testing-library/user-event
  - npm install -D jsdom
  - "[ -f tsconfig.json ] || echo '{\"compilerOptions\":{\"target\":\"es5\",\"module\":\"commonjs\",\"strict\":true,\"esModuleInterop\":true,\"skipLibCheck\":true,\"forceConsistentCasingInFileNames\":true,\"jsx\":\"react-jsx\",\"types\":[\"jest\",\"node\"]}}' > tsconfig.json"
  - "[ -f babel.config.js ] || echo 'module.exports={presets:[[\"@babel/preset-env\",{targets:{node:\"current\"}}],\"@babel/preset-typescript\",\"@babel/preset-react\"]}' > babel.config.js"
ignore:
  - "*prettierrc*"
  - "*eslintrc*"
  - "*stylelintrc*"
  - "*commitlintrc*"
  - "*lintstagedrc*"
  - "*huskyrc*"
  - "*config.test.*"
  - "*.config.js"
  - "*.config.ts"
  - "*.config.jsx"
